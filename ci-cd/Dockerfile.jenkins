FROM jenkins/jenkins:lts

USER root

# Install all dependencies in one RUN to reduce layers and speed up build
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      git curl wget gnupg lsb-release ca-certificates \
      apt-transport-https software-properties-common \
      python3 python3-pip python3-venv \
      postgresql-client libpq-dev python3-dev \
      maven && \
    # Install Node.js 18.x
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g npm@8.19.4 && \
    # Install Docker CLI
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce-cli && \
    # Clean up
    rm -rf /var/lib/apt/lists/*

# Install Eclipse Temurin JDK 21
RUN mkdir -p /opt/jdk-21 && \
    curl -L https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7+6/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.7_6.tar.gz | tar xz -C /opt/jdk-21 --strip-components=1

ENV JAVA_HOME=/opt/jdk-21
ENV PATH=$JAVA_HOME/bin:$PATH

# Add jenkins user to docker group
RUN groupadd -f docker && usermod -aG docker jenkins

# Startup script for Docker socket permissions
COPY --chown=jenkins:jenkins start-jenkins.sh /usr/local/bin/start-jenkins.sh
RUN chmod +x /usr/local/bin/start-jenkins.sh

# Install Jenkins plugins using plugins.txt for better caching
COPY plugins.txt /usr/share/jenkins/ref/plugins.txt
RUN jenkins-plugin-cli --plugin-file /usr/share/jenkins/ref/plugins.txt

USER jenkins

EXPOSE 8080
VOLUME /var/run/docker.sock

ENTRYPOINT ["/usr/local/bin/start-jenkins.sh"] 