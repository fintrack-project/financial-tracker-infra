services:
  frontend:
    build:
      context: ../financial-tracker-frontend
      target: dev
    ports:
      - "3000:3000"
    volumes:
      - ../financial-tracker-frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=http://backend:8080
    command: >
      sh -c "echo 'REACT_APP_API_URL: $REACT_APP_API_URL' && npm start"
    networks:
      - fintrack-network
  backend:
    build:
      context: ../financial-tracker-backend
      target: dev
    ports:
      - "8080:8080"
    volumes:
      - ../financial-tracker-backend:/app
      - ../financial-tracker-backend/src/main/resources/firebase-service-account.json:/app/src/main/resources/firebase-service-account.json:ro
      - ../financial-tracker-db/migrations:/app/migrations:ro
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${DATABASE_INTERNAL_PORT}/${DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT
      # Mail Configuration (Development)
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USERNAME: 
      SMTP_PASSWORD: 
      SMTP_AUTH: false
      SMTP_STARTTLS: false
      # Flyway Configuration
      FLYWAY_LOCATIONS: filesystem:/app/migrations
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
      SPRING_FLYWAY_VALIDATE_ON_MIGRATE: true
      SPRING_FLYWAY_CLEAN_DISABLED: false
      SPRING_FLYWAY_CLEAN_ON_VALIDATION_ERROR: true
      SPRING_FLYWAY_SCHEMAS: ${DATABASE_NAME}
      SPRING_FLYWAY_DEFAULT_SCHEMA: ${DATABASE_NAME}
      # Stripe Configuration (Development)
      STRIPE_SECRET_KEY: ${STRIPE_TEST_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_TEST_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_TEST_WEBHOOK_SECRET}
      # Firebase Configuration (Development)
      FIREBASE_SERVICE_ACCOUNT_PATH: /app/src/main/resources/firebase-service-account.json
      # Application URLs
      APP_BASE_URL: ${FRONTEND_URL}
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    networks:
      - fintrack-network
  etl:
    build:
      context: ../financial-tracker-etl
      target: builder
    environment:
      KAFKA_BROKER: kafka:9093
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_INTERNAL_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    networks:
      - fintrack-network
  db:
    image: postgres:15
    ports:
      - "${DATABASE_HOST_PORT}:${DATABASE_INTERNAL_PORT}"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fintrack-network
  mailhog:
    image: mailhog/mailhog
    ports:
      - "${MAILHOG_PORT}:1025"  # SMTP server
      - "${MAILHOG_UI_PORT}:8025"  # Web UI
    environment:
      MH_HOSTNAME: ${SMTP_HOST}
      MH_SMTP_BIND_ADDR: 0.0.0.0:1025
      MH_API_BIND_ADDR: 0.0.0.0:8025
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fintrack-network 

volumes:
  postgres_data: 