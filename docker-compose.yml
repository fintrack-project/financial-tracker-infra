version: '3.8'
services:
  jenkins:
    build:
      context: .
      dockerfile: ci-cd/Dockerfile.jenkins
    ports:
      - "9090:8080" # Jenkins UI
      # - "50000:50000" # Optional: Only needed for Jenkins agents
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_OPTS=--httpPort=8080
    user: root  # Start as root to set permissions
    group_add:
      - docker
    restart: unless-stopped
  frontend:
    build:
      context: ../financial-tracker-frontend
    depends_on:
      - backend
  backend:
    build:
      context: ../financial-tracker-backend
    depends_on:
      - db
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${DATABASE_INTERNAL_PORT}/${DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - ${DATABASE_NETWORK_NAME}
  etl:
    build:
      context: ../financial-tracker-etl
    depends_on:
      - db
      - backend
      - kafka
      - zookeeper
    environment:
      KAFKA_BROKER: kafka:9093
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_INTERNAL_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - ${DATABASE_NETWORK_NAME}
  db:
    image: postgres:15
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - ${DATABASE_NETWORK_NAME}
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092" # Host communication
      - "9093:9093" # Docker network communication
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - ${DATABASE_NETWORK_NAME}
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9093 --list"]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ${DATABASE_NETWORK_NAME}
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  jenkins_home:
  pgdata:

networks:
  ${DATABASE_NETWORK_NAME}:
    external: true